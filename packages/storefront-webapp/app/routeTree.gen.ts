/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CategorySlugImport } from './routes/$categorySlug'
import { Route as IndexImport } from './routes/index'
import { Route as ShopBagIndexImport } from './routes/shop/bag/index'
import { Route as ShopProductProductSlugImport } from './routes/shop/product/$productSlug'

// Create/Update Routes

const CategorySlugRoute = CategorySlugImport.update({
  path: '/$categorySlug',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ShopBagIndexRoute = ShopBagIndexImport.update({
  path: '/shop/bag/',
  getParentRoute: () => rootRoute,
} as any)

const ShopProductProductSlugRoute = ShopProductProductSlugImport.update({
  path: '/shop/product/$productSlug',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$categorySlug': {
      id: '/$categorySlug'
      path: '/$categorySlug'
      fullPath: '/$categorySlug'
      preLoaderRoute: typeof CategorySlugImport
      parentRoute: typeof rootRoute
    }
    '/shop/product/$productSlug': {
      id: '/shop/product/$productSlug'
      path: '/shop/product/$productSlug'
      fullPath: '/shop/product/$productSlug'
      preLoaderRoute: typeof ShopProductProductSlugImport
      parentRoute: typeof rootRoute
    }
    '/shop/bag/': {
      id: '/shop/bag/'
      path: '/shop/bag'
      fullPath: '/shop/bag'
      preLoaderRoute: typeof ShopBagIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$categorySlug': typeof CategorySlugRoute
  '/shop/product/$productSlug': typeof ShopProductProductSlugRoute
  '/shop/bag': typeof ShopBagIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$categorySlug': typeof CategorySlugRoute
  '/shop/product/$productSlug': typeof ShopProductProductSlugRoute
  '/shop/bag': typeof ShopBagIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$categorySlug': typeof CategorySlugRoute
  '/shop/product/$productSlug': typeof ShopProductProductSlugRoute
  '/shop/bag/': typeof ShopBagIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/$categorySlug' | '/shop/product/$productSlug' | '/shop/bag'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$categorySlug' | '/shop/product/$productSlug' | '/shop/bag'
  id:
    | '__root__'
    | '/'
    | '/$categorySlug'
    | '/shop/product/$productSlug'
    | '/shop/bag/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CategorySlugRoute: typeof CategorySlugRoute
  ShopProductProductSlugRoute: typeof ShopProductProductSlugRoute
  ShopBagIndexRoute: typeof ShopBagIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CategorySlugRoute: CategorySlugRoute,
  ShopProductProductSlugRoute: ShopProductProductSlugRoute,
  ShopBagIndexRoute: ShopBagIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$categorySlug",
        "/shop/product/$productSlug",
        "/shop/bag/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$categorySlug": {
      "filePath": "$categorySlug.tsx"
    },
    "/shop/product/$productSlug": {
      "filePath": "shop/product/$productSlug.tsx"
    },
    "/shop/bag/": {
      "filePath": "shop/bag/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
