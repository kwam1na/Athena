/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as CategorySlugImport } from './routes/$categorySlug'
import { Route as IndexImport } from './routes/index'
import { Route as LayoutShopLayoutImport } from './routes/_layout/_shopLayout'
import { Route as ShopBagIndexImport } from './routes/shop/bag/index'
import { Route as ShopProductProductSlugImport } from './routes/shop/product/$productSlug'
import { Route as LayoutShopLayoutShopCategorySlugIndexImport } from './routes/_layout/_shopLayout/shop/$categorySlug/index'
import { Route as LayoutShopLayoutShopCategorySlugSubcategorySlugImport } from './routes/_layout/_shopLayout/shop/$categorySlug/$subcategorySlug'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const CategorySlugRoute = CategorySlugImport.update({
  path: '/$categorySlug',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutShopLayoutRoute = LayoutShopLayoutImport.update({
  id: '/_shopLayout',
  getParentRoute: () => LayoutRoute,
} as any)

const ShopBagIndexRoute = ShopBagIndexImport.update({
  path: '/shop/bag/',
  getParentRoute: () => rootRoute,
} as any)

const ShopProductProductSlugRoute = ShopProductProductSlugImport.update({
  path: '/shop/product/$productSlug',
  getParentRoute: () => rootRoute,
} as any)

const LayoutShopLayoutShopCategorySlugIndexRoute =
  LayoutShopLayoutShopCategorySlugIndexImport.update({
    path: '/shop/$categorySlug/',
    getParentRoute: () => LayoutShopLayoutRoute,
  } as any)

const LayoutShopLayoutShopCategorySlugSubcategorySlugRoute =
  LayoutShopLayoutShopCategorySlugSubcategorySlugImport.update({
    path: '/shop/$categorySlug/$subcategorySlug',
    getParentRoute: () => LayoutShopLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$categorySlug': {
      id: '/$categorySlug'
      path: '/$categorySlug'
      fullPath: '/$categorySlug'
      preLoaderRoute: typeof CategorySlugImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/_shopLayout': {
      id: '/_layout/_shopLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutShopLayoutImport
      parentRoute: typeof LayoutImport
    }
    '/shop/product/$productSlug': {
      id: '/shop/product/$productSlug'
      path: '/shop/product/$productSlug'
      fullPath: '/shop/product/$productSlug'
      preLoaderRoute: typeof ShopProductProductSlugImport
      parentRoute: typeof rootRoute
    }
    '/shop/bag/': {
      id: '/shop/bag/'
      path: '/shop/bag'
      fullPath: '/shop/bag'
      preLoaderRoute: typeof ShopBagIndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout/_shopLayout/shop/$categorySlug/$subcategorySlug': {
      id: '/_layout/_shopLayout/shop/$categorySlug/$subcategorySlug'
      path: '/shop/$categorySlug/$subcategorySlug'
      fullPath: '/shop/$categorySlug/$subcategorySlug'
      preLoaderRoute: typeof LayoutShopLayoutShopCategorySlugSubcategorySlugImport
      parentRoute: typeof LayoutShopLayoutImport
    }
    '/_layout/_shopLayout/shop/$categorySlug/': {
      id: '/_layout/_shopLayout/shop/$categorySlug/'
      path: '/shop/$categorySlug'
      fullPath: '/shop/$categorySlug'
      preLoaderRoute: typeof LayoutShopLayoutShopCategorySlugIndexImport
      parentRoute: typeof LayoutShopLayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutShopLayoutRouteChildren {
  LayoutShopLayoutShopCategorySlugSubcategorySlugRoute: typeof LayoutShopLayoutShopCategorySlugSubcategorySlugRoute
  LayoutShopLayoutShopCategorySlugIndexRoute: typeof LayoutShopLayoutShopCategorySlugIndexRoute
}

const LayoutShopLayoutRouteChildren: LayoutShopLayoutRouteChildren = {
  LayoutShopLayoutShopCategorySlugSubcategorySlugRoute:
    LayoutShopLayoutShopCategorySlugSubcategorySlugRoute,
  LayoutShopLayoutShopCategorySlugIndexRoute:
    LayoutShopLayoutShopCategorySlugIndexRoute,
}

const LayoutShopLayoutRouteWithChildren =
  LayoutShopLayoutRoute._addFileChildren(LayoutShopLayoutRouteChildren)

interface LayoutRouteChildren {
  LayoutShopLayoutRoute: typeof LayoutShopLayoutRouteWithChildren
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutShopLayoutRoute: LayoutShopLayoutRouteWithChildren,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$categorySlug': typeof CategorySlugRoute
  '': typeof LayoutShopLayoutRouteWithChildren
  '/shop/product/$productSlug': typeof ShopProductProductSlugRoute
  '/shop/bag': typeof ShopBagIndexRoute
  '/shop/$categorySlug/$subcategorySlug': typeof LayoutShopLayoutShopCategorySlugSubcategorySlugRoute
  '/shop/$categorySlug': typeof LayoutShopLayoutShopCategorySlugIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$categorySlug': typeof CategorySlugRoute
  '': typeof LayoutShopLayoutRouteWithChildren
  '/shop/product/$productSlug': typeof ShopProductProductSlugRoute
  '/shop/bag': typeof ShopBagIndexRoute
  '/shop/$categorySlug/$subcategorySlug': typeof LayoutShopLayoutShopCategorySlugSubcategorySlugRoute
  '/shop/$categorySlug': typeof LayoutShopLayoutShopCategorySlugIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$categorySlug': typeof CategorySlugRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/_shopLayout': typeof LayoutShopLayoutRouteWithChildren
  '/shop/product/$productSlug': typeof ShopProductProductSlugRoute
  '/shop/bag/': typeof ShopBagIndexRoute
  '/_layout/_shopLayout/shop/$categorySlug/$subcategorySlug': typeof LayoutShopLayoutShopCategorySlugSubcategorySlugRoute
  '/_layout/_shopLayout/shop/$categorySlug/': typeof LayoutShopLayoutShopCategorySlugIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$categorySlug'
    | ''
    | '/shop/product/$productSlug'
    | '/shop/bag'
    | '/shop/$categorySlug/$subcategorySlug'
    | '/shop/$categorySlug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$categorySlug'
    | ''
    | '/shop/product/$productSlug'
    | '/shop/bag'
    | '/shop/$categorySlug/$subcategorySlug'
    | '/shop/$categorySlug'
  id:
    | '__root__'
    | '/'
    | '/$categorySlug'
    | '/_layout'
    | '/_layout/_shopLayout'
    | '/shop/product/$productSlug'
    | '/shop/bag/'
    | '/_layout/_shopLayout/shop/$categorySlug/$subcategorySlug'
    | '/_layout/_shopLayout/shop/$categorySlug/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CategorySlugRoute: typeof CategorySlugRoute
  LayoutRoute: typeof LayoutRouteWithChildren
  ShopProductProductSlugRoute: typeof ShopProductProductSlugRoute
  ShopBagIndexRoute: typeof ShopBagIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CategorySlugRoute: CategorySlugRoute,
  LayoutRoute: LayoutRouteWithChildren,
  ShopProductProductSlugRoute: ShopProductProductSlugRoute,
  ShopBagIndexRoute: ShopBagIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$categorySlug",
        "/_layout",
        "/shop/product/$productSlug",
        "/shop/bag/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$categorySlug": {
      "filePath": "$categorySlug.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/_shopLayout"
      ]
    },
    "/_layout/_shopLayout": {
      "filePath": "_layout/_shopLayout.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/_shopLayout/shop/$categorySlug/$subcategorySlug",
        "/_layout/_shopLayout/shop/$categorySlug/"
      ]
    },
    "/shop/product/$productSlug": {
      "filePath": "shop/product/$productSlug.tsx"
    },
    "/shop/bag/": {
      "filePath": "shop/bag/index.tsx"
    },
    "/_layout/_shopLayout/shop/$categorySlug/$subcategorySlug": {
      "filePath": "_layout/_shopLayout/shop/$categorySlug/$subcategorySlug.tsx",
      "parent": "/_layout/_shopLayout"
    },
    "/_layout/_shopLayout/shop/$categorySlug/": {
      "filePath": "_layout/_shopLayout/shop/$categorySlug/index.tsx",
      "parent": "/_layout/_shopLayout"
    }
  }
}
ROUTE_MANIFEST_END */
