/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthedImport } from './routes/_authed'
import { Route as IndexImport } from './routes/index'
import { Route as AuthedOrgUrlSlugIndexImport } from './routes/_authed/$orgUrlSlug/index'
import { Route as AuthedOrgUrlSlugStoreIndexImport } from './routes/_authed/$orgUrlSlug/store/index'
import { Route as AuthedOrgUrlSlugStoreStoreUrlSlugIndexImport } from './routes/_authed/$orgUrlSlug/store/$storeUrlSlug/index'
import { Route as AuthedOrgUrlSlugStoreStoreUrlSlugProductsIndexImport } from './routes/_authed/$orgUrlSlug/store/$storeUrlSlug/products/index'
import { Route as AuthedOrgUrlSlugStoreStoreUrlSlugProductsNewImport } from './routes/_authed/$orgUrlSlug/store/$storeUrlSlug/products/new'
import { Route as AuthedOrgUrlSlugStoreStoreUrlSlugProductsProductSlugIndexImport } from './routes/_authed/$orgUrlSlug/store/$storeUrlSlug/products/$productSlug/index'

// Create/Update Routes

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthedOrgUrlSlugIndexRoute = AuthedOrgUrlSlugIndexImport.update({
  path: '/$orgUrlSlug/',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedOrgUrlSlugStoreIndexRoute = AuthedOrgUrlSlugStoreIndexImport.update(
  {
    path: '/$orgUrlSlug/store/',
    getParentRoute: () => AuthedRoute,
  } as any,
)

const AuthedOrgUrlSlugStoreStoreUrlSlugIndexRoute =
  AuthedOrgUrlSlugStoreStoreUrlSlugIndexImport.update({
    path: '/$orgUrlSlug/store/$storeUrlSlug/',
    getParentRoute: () => AuthedRoute,
  } as any)

const AuthedOrgUrlSlugStoreStoreUrlSlugProductsIndexRoute =
  AuthedOrgUrlSlugStoreStoreUrlSlugProductsIndexImport.update({
    path: '/$orgUrlSlug/store/$storeUrlSlug/products/',
    getParentRoute: () => AuthedRoute,
  } as any)

const AuthedOrgUrlSlugStoreStoreUrlSlugProductsNewRoute =
  AuthedOrgUrlSlugStoreStoreUrlSlugProductsNewImport.update({
    path: '/$orgUrlSlug/store/$storeUrlSlug/products/new',
    getParentRoute: () => AuthedRoute,
  } as any)

const AuthedOrgUrlSlugStoreStoreUrlSlugProductsProductSlugIndexRoute =
  AuthedOrgUrlSlugStoreStoreUrlSlugProductsProductSlugIndexImport.update({
    path: '/$orgUrlSlug/store/$storeUrlSlug/products/$productSlug/',
    getParentRoute: () => AuthedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/_authed/$orgUrlSlug/': {
      id: '/_authed/$orgUrlSlug/'
      path: '/$orgUrlSlug'
      fullPath: '/$orgUrlSlug'
      preLoaderRoute: typeof AuthedOrgUrlSlugIndexImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/$orgUrlSlug/store/': {
      id: '/_authed/$orgUrlSlug/store/'
      path: '/$orgUrlSlug/store'
      fullPath: '/$orgUrlSlug/store'
      preLoaderRoute: typeof AuthedOrgUrlSlugStoreIndexImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/$orgUrlSlug/store/$storeUrlSlug/': {
      id: '/_authed/$orgUrlSlug/store/$storeUrlSlug/'
      path: '/$orgUrlSlug/store/$storeUrlSlug'
      fullPath: '/$orgUrlSlug/store/$storeUrlSlug'
      preLoaderRoute: typeof AuthedOrgUrlSlugStoreStoreUrlSlugIndexImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/$orgUrlSlug/store/$storeUrlSlug/products/new': {
      id: '/_authed/$orgUrlSlug/store/$storeUrlSlug/products/new'
      path: '/$orgUrlSlug/store/$storeUrlSlug/products/new'
      fullPath: '/$orgUrlSlug/store/$storeUrlSlug/products/new'
      preLoaderRoute: typeof AuthedOrgUrlSlugStoreStoreUrlSlugProductsNewImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/$orgUrlSlug/store/$storeUrlSlug/products/': {
      id: '/_authed/$orgUrlSlug/store/$storeUrlSlug/products/'
      path: '/$orgUrlSlug/store/$storeUrlSlug/products'
      fullPath: '/$orgUrlSlug/store/$storeUrlSlug/products'
      preLoaderRoute: typeof AuthedOrgUrlSlugStoreStoreUrlSlugProductsIndexImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/$orgUrlSlug/store/$storeUrlSlug/products/$productSlug/': {
      id: '/_authed/$orgUrlSlug/store/$storeUrlSlug/products/$productSlug/'
      path: '/$orgUrlSlug/store/$storeUrlSlug/products/$productSlug'
      fullPath: '/$orgUrlSlug/store/$storeUrlSlug/products/$productSlug'
      preLoaderRoute: typeof AuthedOrgUrlSlugStoreStoreUrlSlugProductsProductSlugIndexImport
      parentRoute: typeof AuthedImport
    }
  }
}

// Create and export the route tree

interface AuthedRouteChildren {
  AuthedOrgUrlSlugIndexRoute: typeof AuthedOrgUrlSlugIndexRoute
  AuthedOrgUrlSlugStoreIndexRoute: typeof AuthedOrgUrlSlugStoreIndexRoute
  AuthedOrgUrlSlugStoreStoreUrlSlugIndexRoute: typeof AuthedOrgUrlSlugStoreStoreUrlSlugIndexRoute
  AuthedOrgUrlSlugStoreStoreUrlSlugProductsNewRoute: typeof AuthedOrgUrlSlugStoreStoreUrlSlugProductsNewRoute
  AuthedOrgUrlSlugStoreStoreUrlSlugProductsIndexRoute: typeof AuthedOrgUrlSlugStoreStoreUrlSlugProductsIndexRoute
  AuthedOrgUrlSlugStoreStoreUrlSlugProductsProductSlugIndexRoute: typeof AuthedOrgUrlSlugStoreStoreUrlSlugProductsProductSlugIndexRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedOrgUrlSlugIndexRoute: AuthedOrgUrlSlugIndexRoute,
  AuthedOrgUrlSlugStoreIndexRoute: AuthedOrgUrlSlugStoreIndexRoute,
  AuthedOrgUrlSlugStoreStoreUrlSlugIndexRoute:
    AuthedOrgUrlSlugStoreStoreUrlSlugIndexRoute,
  AuthedOrgUrlSlugStoreStoreUrlSlugProductsNewRoute:
    AuthedOrgUrlSlugStoreStoreUrlSlugProductsNewRoute,
  AuthedOrgUrlSlugStoreStoreUrlSlugProductsIndexRoute:
    AuthedOrgUrlSlugStoreStoreUrlSlugProductsIndexRoute,
  AuthedOrgUrlSlugStoreStoreUrlSlugProductsProductSlugIndexRoute:
    AuthedOrgUrlSlugStoreStoreUrlSlugProductsProductSlugIndexRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthedRouteWithChildren
  '/$orgUrlSlug': typeof AuthedOrgUrlSlugIndexRoute
  '/$orgUrlSlug/store': typeof AuthedOrgUrlSlugStoreIndexRoute
  '/$orgUrlSlug/store/$storeUrlSlug': typeof AuthedOrgUrlSlugStoreStoreUrlSlugIndexRoute
  '/$orgUrlSlug/store/$storeUrlSlug/products/new': typeof AuthedOrgUrlSlugStoreStoreUrlSlugProductsNewRoute
  '/$orgUrlSlug/store/$storeUrlSlug/products': typeof AuthedOrgUrlSlugStoreStoreUrlSlugProductsIndexRoute
  '/$orgUrlSlug/store/$storeUrlSlug/products/$productSlug': typeof AuthedOrgUrlSlugStoreStoreUrlSlugProductsProductSlugIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthedRouteWithChildren
  '/$orgUrlSlug': typeof AuthedOrgUrlSlugIndexRoute
  '/$orgUrlSlug/store': typeof AuthedOrgUrlSlugStoreIndexRoute
  '/$orgUrlSlug/store/$storeUrlSlug': typeof AuthedOrgUrlSlugStoreStoreUrlSlugIndexRoute
  '/$orgUrlSlug/store/$storeUrlSlug/products/new': typeof AuthedOrgUrlSlugStoreStoreUrlSlugProductsNewRoute
  '/$orgUrlSlug/store/$storeUrlSlug/products': typeof AuthedOrgUrlSlugStoreStoreUrlSlugProductsIndexRoute
  '/$orgUrlSlug/store/$storeUrlSlug/products/$productSlug': typeof AuthedOrgUrlSlugStoreStoreUrlSlugProductsProductSlugIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/_authed/$orgUrlSlug/': typeof AuthedOrgUrlSlugIndexRoute
  '/_authed/$orgUrlSlug/store/': typeof AuthedOrgUrlSlugStoreIndexRoute
  '/_authed/$orgUrlSlug/store/$storeUrlSlug/': typeof AuthedOrgUrlSlugStoreStoreUrlSlugIndexRoute
  '/_authed/$orgUrlSlug/store/$storeUrlSlug/products/new': typeof AuthedOrgUrlSlugStoreStoreUrlSlugProductsNewRoute
  '/_authed/$orgUrlSlug/store/$storeUrlSlug/products/': typeof AuthedOrgUrlSlugStoreStoreUrlSlugProductsIndexRoute
  '/_authed/$orgUrlSlug/store/$storeUrlSlug/products/$productSlug/': typeof AuthedOrgUrlSlugStoreStoreUrlSlugProductsProductSlugIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/$orgUrlSlug'
    | '/$orgUrlSlug/store'
    | '/$orgUrlSlug/store/$storeUrlSlug'
    | '/$orgUrlSlug/store/$storeUrlSlug/products/new'
    | '/$orgUrlSlug/store/$storeUrlSlug/products'
    | '/$orgUrlSlug/store/$storeUrlSlug/products/$productSlug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/$orgUrlSlug'
    | '/$orgUrlSlug/store'
    | '/$orgUrlSlug/store/$storeUrlSlug'
    | '/$orgUrlSlug/store/$storeUrlSlug/products/new'
    | '/$orgUrlSlug/store/$storeUrlSlug/products'
    | '/$orgUrlSlug/store/$storeUrlSlug/products/$productSlug'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/_authed/$orgUrlSlug/'
    | '/_authed/$orgUrlSlug/store/'
    | '/_authed/$orgUrlSlug/store/$storeUrlSlug/'
    | '/_authed/$orgUrlSlug/store/$storeUrlSlug/products/new'
    | '/_authed/$orgUrlSlug/store/$storeUrlSlug/products/'
    | '/_authed/$orgUrlSlug/store/$storeUrlSlug/products/$productSlug/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authed"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/$orgUrlSlug/",
        "/_authed/$orgUrlSlug/store/",
        "/_authed/$orgUrlSlug/store/$storeUrlSlug/",
        "/_authed/$orgUrlSlug/store/$storeUrlSlug/products/new",
        "/_authed/$orgUrlSlug/store/$storeUrlSlug/products/",
        "/_authed/$orgUrlSlug/store/$storeUrlSlug/products/$productSlug/"
      ]
    },
    "/_authed/$orgUrlSlug/": {
      "filePath": "_authed/$orgUrlSlug/index.tsx",
      "parent": "/_authed"
    },
    "/_authed/$orgUrlSlug/store/": {
      "filePath": "_authed/$orgUrlSlug/store/index.tsx",
      "parent": "/_authed"
    },
    "/_authed/$orgUrlSlug/store/$storeUrlSlug/": {
      "filePath": "_authed/$orgUrlSlug/store/$storeUrlSlug/index.tsx",
      "parent": "/_authed"
    },
    "/_authed/$orgUrlSlug/store/$storeUrlSlug/products/new": {
      "filePath": "_authed/$orgUrlSlug/store/$storeUrlSlug/products/new.tsx",
      "parent": "/_authed"
    },
    "/_authed/$orgUrlSlug/store/$storeUrlSlug/products/": {
      "filePath": "_authed/$orgUrlSlug/store/$storeUrlSlug/products/index.tsx",
      "parent": "/_authed"
    },
    "/_authed/$orgUrlSlug/store/$storeUrlSlug/products/$productSlug/": {
      "filePath": "_authed/$orgUrlSlug/store/$storeUrlSlug/products/$productSlug/index.tsx",
      "parent": "/_authed"
    }
  }
}
ROUTE_MANIFEST_END */
